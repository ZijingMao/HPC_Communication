#include "makelib.h"

int main(int argc, char *argv[]){
	if(argc < 2){
		fprintf (stderr, "Usage: %s command filename1 [filename2] ...\n", argv[0]);
		return 0;
	}

	int i;
	int error;
	pthread_t *tid;
	
	if((tid = (pthread_t *)calloc(argc - 1, sizeof(pthread_t))) == NULL){
		perror("Failed to allocate.");
		return 0;
	}

	for(i = 0; i < argc-1; i++){
		if (error = pthread_create(tid + i, NULL, threadcompilereturn, argv[i+1])){
			fprintf(stderr, "Failed to create thread: %s\n", strerror(error));
			return 0;
		}
		fprintf(stderr, "%s\n", argv[i]);		
	}

	for (i = 0; i < argc-1; i++){
		if(error = pthread_join(tid[i], NULL)){
			fprintf(stderr, "Failed to create thread: %s\n", strerror(error));
			return 0;
		}
	}

	fprintf(stderr, "%d\n", getcount());	

	free(tid);
	return 1;
}


